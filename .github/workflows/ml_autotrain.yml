name: Deploy to GKE

on:
  push:
    branches:
      - feat/model_monitor
    paths:
      - "src/**"
      - "Dockerfile"
      - "k8s/**"
      - ".github/workflows/**"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    env:
      IMAGE_NAME: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-app-repo/sales-automl
      IMAGE_TAG: v1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          credentials: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: sales-cluster
          location: us-central1
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Deploy to GKE
        run: |
          echo "Restarting the deployment to pull the new image..."
          kubectl rollout restart deployment/sales-automl-app-deployment

      - name: Verify deployment
        run: |
          echo "Waiting for rollout to complete..."
          kubectl rollout status deployment/sales-automl-app-deployment --timeout=2m
